//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF_MVC.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/ServerApplication")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Student_CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Student_DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Student_EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Student_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Student_PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Student_Code {
            get {
                return this.Student_CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.Student_CodeField, value) != true)) {
                    this.Student_CodeField = value;
                    this.RaisePropertyChanged("Student_Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Student_Details {
            get {
                return this.Student_DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.Student_DetailsField, value) != true)) {
                    this.Student_DetailsField = value;
                    this.RaisePropertyChanged("Student_Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Student_Email {
            get {
                return this.Student_EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.Student_EmailField, value) != true)) {
                    this.Student_EmailField = value;
                    this.RaisePropertyChanged("Student_Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Student_Name {
            get {
                return this.Student_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Student_NameField, value) != true)) {
                    this.Student_NameField = value;
                    this.RaisePropertyChanged("Student_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Student_Phone {
            get {
                return this.Student_PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.Student_PhoneField, value) != true)) {
                    this.Student_PhoneField = value;
                    this.RaisePropertyChanged("Student_Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudents", ReplyAction="http://tempuri.org/IService1/GetStudentsResponse")]
        WCF_MVC.ServiceReference1.Student[] GetStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudents", ReplyAction="http://tempuri.org/IService1/GetStudentsResponse")]
        System.Threading.Tasks.Task<WCF_MVC.ServiceReference1.Student[]> GetStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudent", ReplyAction="http://tempuri.org/IService1/GetStudentResponse")]
        WCF_MVC.ServiceReference1.Student GetStudent(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudent", ReplyAction="http://tempuri.org/IService1/GetStudentResponse")]
        System.Threading.Tasks.Task<WCF_MVC.ServiceReference1.Student> GetStudentAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindStudent", ReplyAction="http://tempuri.org/IService1/FindStudentResponse")]
        WCF_MVC.ServiceReference1.Student[] FindStudent(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindStudent", ReplyAction="http://tempuri.org/IService1/FindStudentResponse")]
        System.Threading.Tasks.Task<WCF_MVC.ServiceReference1.Student[]> FindStudentAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewStudent", ReplyAction="http://tempuri.org/IService1/AddNewStudentResponse")]
        bool AddNewStudent(WCF_MVC.ServiceReference1.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewStudent", ReplyAction="http://tempuri.org/IService1/AddNewStudentResponse")]
        System.Threading.Tasks.Task<bool> AddNewStudentAsync(WCF_MVC.ServiceReference1.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateStudent", ReplyAction="http://tempuri.org/IService1/UpdateStudentResponse")]
        bool UpdateStudent(WCF_MVC.ServiceReference1.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateStudent", ReplyAction="http://tempuri.org/IService1/UpdateStudentResponse")]
        System.Threading.Tasks.Task<bool> UpdateStudentAsync(WCF_MVC.ServiceReference1.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteStudent", ReplyAction="http://tempuri.org/IService1/DeleteStudentResponse")]
        bool DeleteStudent(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteStudent", ReplyAction="http://tempuri.org/IService1/DeleteStudentResponse")]
        System.Threading.Tasks.Task<bool> DeleteStudentAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WCF_MVC.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WCF_MVC.ServiceReference1.IService1>, WCF_MVC.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCF_MVC.ServiceReference1.Student[] GetStudents() {
            return base.Channel.GetStudents();
        }
        
        public System.Threading.Tasks.Task<WCF_MVC.ServiceReference1.Student[]> GetStudentsAsync() {
            return base.Channel.GetStudentsAsync();
        }
        
        public WCF_MVC.ServiceReference1.Student GetStudent(string id) {
            return base.Channel.GetStudent(id);
        }
        
        public System.Threading.Tasks.Task<WCF_MVC.ServiceReference1.Student> GetStudentAsync(string id) {
            return base.Channel.GetStudentAsync(id);
        }
        
        public WCF_MVC.ServiceReference1.Student[] FindStudent(string name) {
            return base.Channel.FindStudent(name);
        }
        
        public System.Threading.Tasks.Task<WCF_MVC.ServiceReference1.Student[]> FindStudentAsync(string name) {
            return base.Channel.FindStudentAsync(name);
        }
        
        public bool AddNewStudent(WCF_MVC.ServiceReference1.Student student) {
            return base.Channel.AddNewStudent(student);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewStudentAsync(WCF_MVC.ServiceReference1.Student student) {
            return base.Channel.AddNewStudentAsync(student);
        }
        
        public bool UpdateStudent(WCF_MVC.ServiceReference1.Student student) {
            return base.Channel.UpdateStudent(student);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateStudentAsync(WCF_MVC.ServiceReference1.Student student) {
            return base.Channel.UpdateStudentAsync(student);
        }
        
        public bool DeleteStudent(string id) {
            return base.Channel.DeleteStudent(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteStudentAsync(string id) {
            return base.Channel.DeleteStudentAsync(id);
        }
    }
}
